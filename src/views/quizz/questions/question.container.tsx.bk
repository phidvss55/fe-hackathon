// import { icons } from "assets/icons";
// import BackButton from "components/buttons/back.button";
// import { MessagePopup } from "components/widgets/message.popup";
// import { routePaths } from "core/navigation/route-paths";
// import { AppState } from "core/store";
// import { onSetLessonParent } from "core/store/reducer/courses/actions";
// import React, { useEffect, useState } from "react";
// import { useDispatch, useSelector } from "react-redux";
// import { RouteComponentProps, useHistory, useLocation } from "react-router-dom";
// import { toast } from "react-toastify";
// import {
//   onThunkGetDetailLession,
//   onThunkUpdateLesson,
// } from "views/example/store/thunk";

// type Props = RouteComponentProps;

// const QuestionContainer: React.FC<Props> = (props: Props) => {
//   const history = useHistory();
//   const dispatch = useDispatch();
//   const [showPopup, setShowPopup] = useState<boolean>(false);
//   const [answerSelected, setAnswerSelected] = useState<number | null>(null);
//   const lessonId = new URLSearchParams(useLocation().search).get("lessonId");
//   const courseId = new URLSearchParams(useLocation().search).get("courseId");
//   const { lessonDetails, courseDetail, lessonList, lessonParent } = useSelector(
//     (state: AppState) => state.course
//   );
//   const { session_id } = useSelector((state: AppState) => state.app);
//   const [error, setError] = useState<any[]>([]);
//   const [disabled, setDisabled] = useState<boolean>(false);
//   const [completed, setCompleted] = useState<boolean>(false);

//   useEffect(() => {
//     lessonList.forEach((item: any) => {
//       if (item.lessonId === lessonId) {
//         dispatch(onSetLessonParent(item));

//         if (item.completeYn === "Y") {
//           setCompleted(true);
//           setDisabled(true);
//         }
//       }
//     });
//   }, [lessonDetails]);

//   useEffect(() => {
//     if (!lessonId) {
//       history.push(routePaths.dashboard);
//       return;
//     }

//     dispatch(onThunkGetDetailLession(lessonId));
//   }, []);

//   const onSubmitAnswer = () => {
//     if (!answerSelected) {
//       toast.error("Please select an answer");
//     }

//     const answer = lessonDetails[0]?.answerId;
//     if (answerSelected !== answer) {
//       setError([...error, answerSelected]);
//     } else {
//       const payload = {
//         usrId: session_id,
//         lessonId,
//       };
//       dispatch(
//         onThunkUpdateLesson(payload, () => {
//           toast.success("Lesson updated successfully");
//           setShowPopup(true);
//           setDisabled(true);
//         })
//       );
//     }
//   };

//   return (
//     <div className="mt-5 flex w-full flex-col px-12">
//       <div className="flex gap-4">
//         {/* Button */}
//         <BackButton courseId={courseId ?? ""} />

//         {/* Right side */}
//         <div className="flex w-[85%] flex-initial flex-col">
//           <div className="mt-1.5 flex grow basis-[0%] flex-col items-stretch">
//             <div className="text-zinc-900 text-base font-semibold">
//               Lesson&nbsp;
//               {lessonParent?.lessonSeq}
//             </div>
//             <div className="text-zinc-900 mt-3 text-3xl font-semibold">
//               {lessonParent?.lessonDesc}
//             </div>
//           </div>

//           {lessonDetails.length < 1 ? (
//             // incase there are no question was added
//             <div className="mt-10">
//               <div className="text-2xl font-semibold">
//                 Your list of questions currently are null
//               </div>
//               <div className="mt-5 text-xl">Please upload the questions</div>
//             </div>
//           ) : (
//             <>
//               <div className="text-zinc-900 mt-8 flex w-fit max-w-full flex-col items-stretch text-2xl font-bold">
//                 Question 1:
//               </div>

//               <div className="text-zinc-900 mt-8 w-full text-2xl">
//                 {lessonDetails[0]?.quizDesc ?? ""}
//               </div>

//               {lessonDetails[0]?.listAnswer?.map((item: any, index: number) => {
//                 return (
//                   <div
//                     key={index}
//                     role={"button"}
//                     aria-hidden={"true"}
//                     onClick={() => setAnswerSelected(item.answerId)}
//                     className={`mt-8 w-full cursor-pointer rounded-lg border-4 border-solid py-5 px-6 hover:bg-secondary-green-400 ${
//                       answerSelected === item.answerId ? "bg-primary-green" : ""
//                     }
//                     ${
//                       error.includes(item.answerId)
//                         ? "!border-red-600"
//                         : "border-primary-green"
//                     }`}
//                   >
//                     <div className="flex gap-5">
//                       <div className="flex h-10 flex-col items-center justify-center rounded-lg border-4 border-solid border-primary-green bg-white px-4 text-2xl font-semibold text-green-500 hover:border-white">
//                         {index + 1}
//                       </div>
//                       <div className="text-zinc-900 my-auto ml-5 flex w-[82%] flex-col text-2xl">
//                         {item.answerDesc}
//                       </div>
//                     </div>
//                   </div>
//                 );
//               })}

//               <div className="mt-8 mb-5 flex w-full items-stretch justify-between gap-5 self-center">
//                 <div className="flex items-start justify-between gap-5">
//                   <button
//                     type="button"
//                     className="text-zinc-900 justify-center rounded-lg bg-neutral-gray-300 py-5 px-12 text-center text-2xl font-semibold hover:bg-neutral-gray-200"
//                   >
//                     Previous
//                   </button>
//                   <button
//                     type="button"
//                     className={`text-zinc-900 justify-center rounded-lg  px-12 py-5 text-center text-2xl font-semibold
//                 ${
//                   answerSelected
//                     ? "bg-primary-green hover:bg-secondary-green-400"
//                     : "bg-neutral-gray-300 hover:bg-neutral-gray-200"
//                 }`}
//                   >
//                     Next
//                   </button>
//                 </div>
//                 <button
//                   disabled={disabled}
//                   onClick={onSubmitAnswer}
//                   type="button"
//                   className={`text-zinc-900 self-start rounded-lg px-12 py-5 text-center text-2xl font-semibold  ${
//                     disabled
//                       ? "cursor-not-allowed bg-neutral-gray-300"
//                       : "bg-primary-green hover:bg-secondary-green-400"
//                   }  `}
//                 >
//                   Submit
//                 </button>
//               </div>
//             </>
//           )}
//         </div>
//       </div>

//       {showPopup && (
//         <MessagePopup
//           onReview={() => {
//             history.push({
//               pathname: routePaths.quizz.quizzPlay,
//               search: `?lessonId=${lessonId}&courseId=${courseId}`,
//             });
//             setShowPopup(false);
//           }}
//           onClose={() => {
//             history.push({
//               pathname: routePaths.quizz.basePath,
//               search: `?courseId=${courseId}`,
//             });
//             setShowPopup(false);
//           }}
//         />
//       )}
//     </div>
//   );
// };

// export default QuestionContainer;
